Algorithm:

UNAMBIGUOUS SPECIFICATION

An informal definition could be "a set of rules that precisely defines a sequence of operations."[18] which would include all computer programs, including programs that do not perform numeric calculations. Generally, a program is only an algorithm if it stops eventually

[2,6,8,55,89,90,5]

how to find a specific number
look for repetitions of a number and return how many times

function exists(n){
for (const x of xs) {
    if (x ===n) { n is not defined
        return true;
    }
    return false;
}
}

exists {3423}; 

if array has the same number repeated you could create a list, 

function count(xs,n) {
    //initialize the counter
    let counter = 0;
    //iterate xs
    // 

    for(const x in xs){
        if (x ===n){
            counter ++;
        }
    }
    // return true if counter is greater than 0 than return an object with one key that says exists true

    if (counter>0)

    {
        return {
            exists: true,
            howMany: counter
        }
    }
}

what does big O mean?
worst case? 

---

task:

return a random number in the list 

let List = [1, 2, 3, 9, 233, 45]

function getRandomNum (list) {
    let num = list[Math.floor(Math.random*list.length)];
    return num;
}

console.log(findRandomNum(List));

--

Benchmarking
https://benchmarkjs.com/

Why is it useful to abstract concrete time?
- People are using different computers, makes sense to talk about it in terms of steps because that doesn't change.

const xs=[4,6,8,0,1];

--
next activity

[0,1,3, 1,7,9]

Steps:

- check if the length of the list is >1
- define i 
- if so, compare 1st 2nd indices,
    if 1st # < 2nd # we will continue to the next step
    else swap the 2 numbers
- loop through and increment each time 


- if you solved the base case you have solved the entire problem...except why are we still working on it?

break into smaller arrays


Sub-problems:
What if array is empty? [ ]

[1,5,3,7,] THIS IS QUADRATIC TIME, because you have 2 loops this algorthim is om squared.
1,5 is 1 less than 5? yes
1,3 is 1 less than 3? yes
1,7 is 1 less than 7? yes








